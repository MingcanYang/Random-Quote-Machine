{"ast":null,"code":"var _jsxFileName = \"/Users/yangmingcan/Documents/Exercises/reactex/Random Quote Machine/random-quote-machine/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport $ from 'jquery'; // 引入 jQuery\nimport './App.css'; // 引入自定义样式\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // 用于存储引用内容和作者\n  const [quoteData, setQuoteData] = useState({\n    content: '',\n    author: ''\n  });\n\n  // 初次加载时获取引用（无动画）\n  useEffect(() => {\n    $.ajax({\n      url: 'https://api.quotable.io/random',\n      method: 'GET',\n      success: function (data) {\n        setQuoteData({\n          content: data.content,\n          author: data.author\n        });\n      },\n      error: function (err) {\n        console.error('获取引用时出错：', err);\n      }\n    });\n  }, []);\n\n  // 点击按钮获取新引用（含淡出淡入动画）\n  const fetchNewQuote = () => {\n    // 先淡出\n    $('#text, #author').fadeOut(500, function () {\n      // 淡出后进行 AJAX 请求\n      $.ajax({\n        url: 'https://api.quotable.io/random',\n        method: 'GET',\n        success: function (data) {\n          setQuoteData({\n            content: data.content,\n            author: data.author\n          });\n          // 数据更新后淡入\n          $('#text, #author').fadeIn(500);\n        },\n        error: function (err) {\n          console.error('获取引用时出错：', err);\n          // 出错也要淡入恢复\n          $('#text, #author').fadeIn(500);\n        }\n      });\n    });\n  };\n\n  // 构造 Tweet 链接\n  const tweetUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(`\"${quoteData.content}\" - ${quoteData.author}`)}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quote-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"text\",\n        children: quoteData.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"author\",\n        children: [\"- \", quoteData.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"new-quote\",\n        onClick: fetchNewQuote,\n        children: \"New Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        id: \"tweet-quote\",\n        href: tweetUrl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Tweet Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"p9qCNOAbmweDm4068Usq92N8olc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","$","jsxDEV","_jsxDEV","App","_s","quoteData","setQuoteData","content","author","ajax","url","method","success","data","error","err","console","fetchNewQuote","fadeOut","fadeIn","tweetUrl","encodeURIComponent","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/yangmingcan/Documents/Exercises/reactex/Random Quote Machine/random-quote-machine/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport $ from 'jquery'; // 引入 jQuery\nimport './App.css';     // 引入自定义样式\n\nfunction App() {\n  // 用于存储引用内容和作者\n  const [quoteData, setQuoteData] = useState({ content: '', author: '' });\n\n  // 初次加载时获取引用（无动画）\n  useEffect(() => {\n    $.ajax({\n      url: 'https://api.quotable.io/random',\n      method: 'GET',\n      success: function(data) {\n        setQuoteData({ content: data.content, author: data.author });\n      },\n      error: function(err) {\n        console.error('获取引用时出错：', err);\n      }\n    });\n  }, []);\n\n  // 点击按钮获取新引用（含淡出淡入动画）\n  const fetchNewQuote = () => {\n    // 先淡出\n    $('#text, #author').fadeOut(500, function() {\n      // 淡出后进行 AJAX 请求\n      $.ajax({\n        url: 'https://api.quotable.io/random',\n        method: 'GET',\n        success: function(data) {\n          setQuoteData({ content: data.content, author: data.author });\n          // 数据更新后淡入\n          $('#text, #author').fadeIn(500);\n        },\n        error: function(err) {\n          console.error('获取引用时出错：', err);\n          // 出错也要淡入恢复\n          $('#text, #author').fadeIn(500);\n        }\n      });\n    });\n  };\n\n  // 构造 Tweet 链接\n  const tweetUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(\n    `\"${quoteData.content}\" - ${quoteData.author}`\n  )}`;\n\n  return (\n    <div className=\"App\">\n      {/* 包装元素：id=\"quote-box\" */}\n      <div id=\"quote-box\">\n        {/* id=\"text\" 显示引用文本 */}\n        <div id=\"text\">{quoteData.content}</div>\n        {/* id=\"author\" 显示引用作者 */}\n        <div id=\"author\">- {quoteData.author}</div>\n        {/* id=\"new-quote\" 点击后获取新引用 */}\n        <button id=\"new-quote\" onClick={fetchNewQuote}>\n          New Quote\n        </button>\n        {/* id=\"tweet-quote\" 点击后发布到 Twitter */}\n        <a\n          id=\"tweet-quote\"\n          href={tweetUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Tweet Quote\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}